# this is the testing template
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: "t2.micro"
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
      - t3.micro
      - t2.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.   
  ImageId:    
    Type: string
    Default: "ami-094125af156557ca2"
    Description: this the AMI
  AvailabilityZone: "us-west-2a"
  mySubnetIDs:
    Description: subnet IDs
    Type: "List<AWS::EC2::Subnet::0e19bfa2a3fa6e9c3>"

         
  Ec2Instance: #Logical Name
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: !Ref InstanceTypeParameter 
      ImageId: !FindInMap [RegionAndI nstanceTypeToAMIID, !Ref AWS::Region ,!Ref EnvironmentType]
      AvailabilityZone: "us-west-2a"
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
      - !Ref InstanceSecurityGroup
      Tags: #Adding a tag
      - Key: "Name"
        Value: "Ines"       

Mappings: #section dynamically assign fixed value. 
  InesRegionMap: #Region Map, name
    us-east-1: # Top Key Level
      "HVM64": "ami-0ff8a91507f77f867" # Top Key Level key
    us-west-1: 
      "HVM64": "ami-0bdb828fd58c52235"
    us-west-2: 
      "HVM64": "ami-094125af156557ca2"  
    eu-west-1: 
      "HVM64": "ami-047bb4163c506cd98"
    ap-southeast-1: 
      "HVM64": "ami-08569b978cc4dfa10"
    ap-northeast-1: 
      "HVM64": "ami-06cd52961ce9f0d85"
    
#Pseudo Parameter mapping
Mappings: 
  RegionAndInstanceTypeToAMIID: 
    us-east-1: #Top Key Level
      test: "ami-8ff710e2" # Top Key Level key
      prod: "ami-f5f41398"
    us-west-2: 
      test: "ami-eff1028f"
      prod: "ami-d0f506b0"


Parameters: 
  EnvironmentType: 
    Description: The environment type
    Type: String
    Default: test
    AllowedValues: 
      - prod
      - test
    ConstraintDescription: must be a prod or test

 
